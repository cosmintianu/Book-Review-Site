{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = async (username, password) => {\n    // Simulating an asynchronous login process\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Replace this with your actual login logic, e.g., calling an authentication API\n    if (username === 'user' && password === 'password') {\n      setIsLoggedIn(true);\n      localStorage.setItem('token', 'someAuthToken'); // Store token in localStorage\n    } else {\n      throw new Error('Invalid credentials');\n    }\n  };\n  const logout = () => {\n    // Replace this with your actual logout logic, e.g., clearing the authentication token\n    setIsLoggedIn(false);\n    localStorage.removeItem('token'); // Remove token from localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","login","username","password","Promise","resolve","setTimeout","localStorage","setItem","Error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const login = async (username, password) => {\r\n    // Simulating an asynchronous login process\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    // Replace this with your actual login logic, e.g., calling an authentication API\r\n    if (username === 'user' && password === 'password') {\r\n      setIsLoggedIn(true);\r\n      localStorage.setItem('token', 'someAuthToken'); // Store token in localStorage\r\n    } else {\r\n      throw new Error('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Replace this with your actual logout logic, e.g., clearing the authentication token\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('token'); // Remove token from localStorage\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C;IACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;IAEzD;IACA,IAAIH,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAClDH,aAAa,CAAC,IAAI,CAAC;MACnBO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;IAClD,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAV,aAAa,CAAC,KAAK,CAAC;IACpBO,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,UAAU;MAAEE,KAAK;MAAES;IAAO,CAAE;IAAAb,QAAA,EACxDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CA3BWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA6BzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG9B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIZ,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOY,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}