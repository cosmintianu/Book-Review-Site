{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\components\\\\IndividualBookPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualBookPage = () => {\n  _s();\n  var _userData$roles$some, _userData$roles;\n  const {\n    id\n  } = useParams();\n  const [book, setBook] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [loadingReviews, setLoadingReviews] = useState(true);\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n\n  // State for new review\n  const [newReview, setNewReview] = useState({\n    user: {\n      id: null // Replace with the actual user ID from authentication\n    },\n    book: {\n      id: id // Set the book ID to the current page's book ID\n    },\n    rating: 0,\n    text: \"\",\n    date: \"16-01-2024\" // You can update the date format as needed\n  });\n  useEffect(() => {\n    // Fetch individual book details based on the ID\n    fetch(`http://localhost:8080/book/${id}`).then(response => response.json()).then(data => {\n      setBook(data);\n\n      // Update the book ID in newReview when the book data is available\n      setNewReview(prevReview => ({\n        ...prevReview,\n        book: {\n          id: data.id\n        }\n      }));\n    }).catch(error => console.error(`Error fetching book ${id} details:`, error));\n\n    // Fetch reviews for the individual book using the updated endpoint\n    fetch(`http://localhost:8080/review/book/${id}`).then(response => response.json()).then(data => setReviews(data)).catch(error => console.error(`Error fetching reviews for book ${id}:`, error)).finally(() => setLoadingReviews(false));\n    fetchUserData(userData);\n    console.log(userData);\n    setUserData(userData);\n  }, [id]);\n  const handleReviewSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Set the current date\n      const currentDate = new Date();\n      const formattedDate = currentDate.toISOString().split('T')[0];\n      console.log(formattedDate);\n      // Update the newReview object with the current date\n      setNewReview(prevReview => ({\n        ...prevReview,\n        date: formattedDate,\n        user: {\n          id: userData.id\n        }\n      }));\n\n      // Send the new review to the server using Axios\n      await axios.post('http://localhost:8080/review/add', newReview, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refetch reviews from the server after submitting a new review\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\n      const updatedReviewsData = await updatedReviewsResponse.json();\n      setReviews(updatedReviewsData);\n\n      // Clear the new review form\n      setNewReview({\n        user: {\n          id: userData.id // Replace with the actual user ID from authentication\n        },\n        book: {\n          id: id\n        },\n        rating: 0,\n        text: \"\",\n        date: formattedDate // Set the date to the current date\n      });\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      // Handle error as needed\n    }\n  };\n  const fetchUserData = async () => {\n    const username = localStorage.getItem('username');\n    try {\n      const response = await axios.get(`http://localhost:8080/user/findByUsername/${username}`);\n      setUserData(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  const handleDeleteBook = () => {\n    if (isAdmin) {\n      axios.delete('http://localhost:8080/book/deleteByTitle', {\n        data: {\n          title: book.title\n        },\n        // Pass the bookId as data for the DELETE request\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Book deleted successfully:', response.data);\n        navigate('/book-list');\n        // You may want to navigate to a different page or update the UI as needed\n      }).catch(error => {\n        console.error('Error deleting book:', error);\n        // Handle the error, e.g., display an error message to the user\n      });\n    } else {\n      console.log('User does not have the required role for deletion.');\n      // Optionally, you can provide feedback to the user that they don't have the required role\n    }\n  };\n  const handleBackToBook = () => {\n    navigate('/book-list');\n  };\n  const isAdmin = (_userData$roles$some = userData === null || userData === void 0 ? void 0 : (_userData$roles = userData.roles) === null || _userData$roles === void 0 ? void 0 : _userData$roles.some(role => role.roleName === 'ADMIN')) !== null && _userData$roles$some !== void 0 ? _userData$roles$some : false;\n  const isLoggedIn = userData !== null && userData !== void 0 ? userData : false;\n  if (!book || loadingReviews) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '300px',\n      marginRight: '300px',\n      backgroundColor: ''\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), book.publisher && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publisher: \", book.publisher.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", book.genres.map(genre => genre.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), Array.isArray(reviews) && reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this book.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(1, 1fr)',\n        gap: '16px',\n        marginRight: 300\n      },\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '16px',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            position: 'relative',\n            top: '-10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"User: \", review.user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", review.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '',\n        marginRight: '',\n        backgroundColor: '',\n        position: 'absolute',\n        top: 150,\n        left: 1240\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReviewSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: '10px'\n          },\n          type: \"number\",\n          min: \"0\",\n          max: \"10\",\n          step: \"0.1\",\n          value: newReview.rating,\n          onChange: e => setNewReview({\n            ...newReview,\n            rating: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Review:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"40\",\n          value: newReview.text,\n          onChange: e => setNewReview({\n            ...newReview,\n            text: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            position: 'absolute',\n            left: 250\n          },\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n      bookId: book.id,\n      on: true,\n      onClick: handleDeleteBook,\n      style: {\n        position: 'absolute',\n        top: 100,\n        left: 1500\n      },\n      children: \"Delete Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToBook,\n      style: {\n        position: 'absolute',\n        left: 30,\n        top: 100\n      },\n      children: \"Back to Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualBookPage, \"a91HideAi0w4GxajdheUe+T5rQI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = IndividualBookPage;\nexport default IndividualBookPage;\nvar _c;\n$RefreshReg$(_c, \"IndividualBookPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","IndividualBookPage","_s","_userData$roles$some","_userData$roles","id","book","setBook","reviews","setReviews","loadingReviews","setLoadingReviews","userData","setUserData","navigate","newReview","setNewReview","user","rating","text","date","fetch","then","response","json","data","prevReview","catch","error","console","finally","fetchUserData","log","handleReviewSubmit","e","preventDefault","currentDate","Date","formattedDate","toISOString","split","post","headers","updatedReviewsResponse","updatedReviewsData","username","localStorage","getItem","get","handleDeleteBook","isAdmin","delete","title","handleBackToBook","roles","some","role","roleName","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","marginRight","backgroundColor","authors","map","author","firstName","lastName","join","publisher","name","genres","genre","Array","isArray","length","display","gridTemplateColumns","gap","review","border","padding","borderRadius","cursor","justifyContent","position","top","left","onSubmit","type","min","max","step","value","onChange","target","required","rows","cols","bookId","on","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/components/IndividualBookPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst IndividualBookPage = () => {\r\n  const { id } = useParams();\r\n  const [book, setBook] = useState(null);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loadingReviews, setLoadingReviews] = useState(true);\r\n  const [userData, setUserData] = useState(null);\r\n  const navigate = useNavigate();\r\n \r\n  // State for new review\r\n  const [newReview, setNewReview] = useState({\r\n    user: {\r\n      id: null, // Replace with the actual user ID from authentication\r\n    },\r\n    book: {\r\n      id: id, // Set the book ID to the current page's book ID\r\n    },\r\n    rating: 0,\r\n    text: \"\",\r\n    date: \"16-01-2024\", // You can update the date format as needed\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch individual book details based on the ID\r\n    fetch(`http://localhost:8080/book/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setBook(data);\r\n\r\n        // Update the book ID in newReview when the book data is available\r\n        setNewReview(prevReview => ({\r\n          ...prevReview,\r\n          book: {\r\n            id: data.id,\r\n          },\r\n          \r\n        }));\r\n      })\r\n      .catch(error => console.error(`Error fetching book ${id} details:`, error));\r\n\r\n\r\n\r\n    // Fetch reviews for the individual book using the updated endpoint\r\n    fetch(`http://localhost:8080/review/book/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => setReviews(data))\r\n      .catch(error => console.error(`Error fetching reviews for book ${id}:`, error))\r\n      .finally(() => setLoadingReviews(false));\r\n\r\n      fetchUserData(userData);\r\n\r\n      console.log(userData);\r\n\r\n      setUserData(userData);\r\n      \r\n  }, [id]);\r\n\r\n  \r\n\r\n  const handleReviewSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      // Set the current date\r\n      const currentDate = new Date();\r\n      const formattedDate = currentDate.toISOString().split('T')[0];\r\n  \r\n      console.log(formattedDate);\r\n      // Update the newReview object with the current date\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        date: formattedDate,\r\n        user:{\r\n          id: userData.id,\r\n        }\r\n      }));\r\n  \r\n      // Send the new review to the server using Axios\r\n      await axios.post('http://localhost:8080/review/add', newReview, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      // Refetch reviews from the server after submitting a new review\r\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\r\n      const updatedReviewsData = await updatedReviewsResponse.json();\r\n\r\n      setReviews(updatedReviewsData);\r\n  \r\n      // Clear the new review form\r\n      setNewReview({\r\n        user: {\r\n          id: userData.id, // Replace with the actual user ID from authentication\r\n        },\r\n        book: {\r\n          id: id,\r\n        },\r\n        rating: 0,\r\n        text: \"\",\r\n        date: formattedDate, // Set the date to the current date\r\n      });\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const fetchUserData = async () => {\r\n    const username = localStorage.getItem('username');\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/user/findByUsername/${username}`\r\n      );\r\n  \r\n      setUserData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteBook = () => {\r\n  if (isAdmin) {\r\n\r\n    axios.delete('http://localhost:8080/book/deleteByTitle', {\r\n      data: { title : book.title }, // Pass the bookId as data for the DELETE request\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('Book deleted successfully:', response.data);\r\n        navigate('/book-list');\r\n        // You may want to navigate to a different page or update the UI as needed\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting book:', error);\r\n        // Handle the error, e.g., display an error message to the user\r\n      });\r\n  } else {\r\n    console.log('User does not have the required role for deletion.');\r\n    // Optionally, you can provide feedback to the user that they don't have the required role\r\n  }\r\n};\r\n\r\nconst handleBackToBook = () => {\r\n  navigate('/book-list');\r\n}  \r\n\r\n  const isAdmin = userData?.roles?.some(role => role.roleName === 'ADMIN') ?? false;\r\n  const isLoggedIn = userData ?? false;\r\n\r\n  if (!book || loadingReviews) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginLeft :'300px',marginRight :'300px',backgroundColor:'' }}>\r\n      <h2>{book.title}</h2>\r\n      <p>Author: {book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')}</p>\r\n      {book.publisher && (\r\n        <p>Publisher: {book.publisher.name}</p>\r\n      )}\r\n      <p>Genres: {book.genres.map(genre => genre.name).join(', ')}</p>\r\n      <h3>Reviews:</h3>\r\n      {Array.isArray(reviews) && reviews.length === 0 ? (\r\n        <p>No reviews available for this book.</p>\r\n      ) : (\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(1, 1fr)', gap: '16px', marginRight:300}}>\r\n          {reviews.map(review => (\r\n            <div key={review.id}style={{ border: '1px solid #ccc', padding: '16px', borderRadius: '8px', cursor: 'pointer' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between',position:'relative', top:'-10px' }}>\r\n              <div style={{ marginRight: '30px' }}>\r\n                <p>User: {review.user.username}</p>\r\n              </div>\r\n              <div>\r\n                <p>Date: {review.date}</p>\r\n              </div>\r\n            </div>\r\n\r\n              \r\n              <p>Rating: {review.rating}</p>\r\n              <p>{review.text}</p>\r\n              {//<p>Date: {review.date}</p>\r\n              }\r\n              </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {isLoggedIn && (\r\n      <div style={{ marginLeft :'',marginRight :'',backgroundColor:'',position: 'absolute', top: 150, left: 1240 }}>\r\n      {/* Form for adding a new review */}\r\n      \r\n      <h3>Add a Review:</h3>\r\n      <form onSubmit={handleReviewSubmit}>\r\n        <label style={{ marginRight :'10px'}}>Rating:</label>\r\n        <input style={{ marginLeft :'10px'}}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"10\"\r\n          step=\"0.1\"\r\n          value={newReview.rating}\r\n          onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\r\n          required\r\n        />\r\n        <br />\r\n    \r\n        <br ></br>\r\n        <label >Review:</label>\r\n        <br></br>\r\n        <br></br>\r\n        <textarea rows= \"5\" cols = \"40\"\r\n          value={newReview.text}\r\n          onChange={(e) => setNewReview({ ...newReview, text: e.target.value })}\r\n          required\r\n        />\r\n        <br></br>\r\n        <br />\r\n        <button type=\"submit\" style = {{ position :'absolute', left : 250}}>Submit Review</button>\r\n      </form>\r\n      </div>\r\n      )}\r\n\r\n      {isAdmin && (\r\n        <button bookId={book.id} on onClick={handleDeleteBook} \r\n        style={{ position: 'absolute', top: 100, left: 1500 }}\r\n        >Delete Book</button>\r\n      )}\r\n      <br />\r\n      <button onClick={handleBackToBook}\r\n      style = {{position : 'absolute', left : 30, top:100}}>Back to Books</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualBookPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}