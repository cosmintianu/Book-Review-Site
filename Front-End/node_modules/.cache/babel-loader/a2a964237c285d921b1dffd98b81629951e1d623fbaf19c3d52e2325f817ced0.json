{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  // Initialize user state with data from LocalStorage on component mount\n  useEffect(() => {\n    // const storedUsername = localStorage.getItem('username');\n    // if (storedUsername) {\n    //     setUser()\n\n    // }\n    fetchUserData();\n    setUser(userData);\n  }, [userData]);\n  const login = userData => {\n    setUser(userData);\n    //console.log(userData);\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n  };\n  const isAuthenticated = !!user;\n  const fetchUserData = async () => {\n    const username = localStorage.getItem('username');\n    try {\n      const response = await axios.get(`http://localhost:8080/user/findByUsername/${username}`);\n      setUserData(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"3MlybS9e43bN1qj+blAa62TFoE4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","userData","setUserData","fetchUserData","login","logout","localStorage","removeItem","isAuthenticated","username","getItem","response","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/components/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  // Initialize user state with data from LocalStorage on component mount\r\n  useEffect(() => {\r\n    // const storedUsername = localStorage.getItem('username');\r\n    // if (storedUsername) {\r\n    //     setUser()\r\n        \r\n    // }\r\n    fetchUserData();\r\n    setUser(userData);\r\n  }, [userData]);\r\n\r\n  const login = (userData) => {\r\n\r\n    setUser(userData);\r\n    //console.log(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n\r\n    setUser(null);\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('password');\r\n  };\r\n  \r\n  const isAuthenticated = !!user;\r\n\r\n  const fetchUserData = async () => {\r\n      const username = localStorage.getItem('username');\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:8080/user/findByUsername/${username}`\r\n        );\r\n    \r\n        setUserData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n  \r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;;IAEA;IACAY,aAAa,CAAC,CAAC;IACfH,OAAO,CAACC,QAAQ,CAAC;EACnB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMG,KAAK,GAAIH,QAAQ,IAAK;IAE1BD,OAAO,CAACC,QAAQ,CAAC;IACjB;EACF,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IAEnBL,OAAO,CAAC,IAAI,CAAC;IACbM,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;IACnCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACrC,CAAC;EAED,MAAMC,eAAe,GAAG,CAAC,CAACT,IAAI;EAE9B,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMM,QAAQ,GAAGH,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAC7B,6CAA4CH,QAAS,EACxD,CAAC;MAEDP,WAAW,CAACS,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEH,oBACEpB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEK,KAAK;MAAEC,MAAM;MAAEG;IAAgB,CAAE;IAAAX,QAAA,EACnEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CA/CWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAiDzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOnC,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;AAAC6B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}