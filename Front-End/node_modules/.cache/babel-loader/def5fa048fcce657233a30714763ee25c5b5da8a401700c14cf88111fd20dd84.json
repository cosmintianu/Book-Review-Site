{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\AddBookForm.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Other imports...\n\nconst AddBookForm = () => {\n  _s();\n  const [book, setBook] = useState({\n    title: '',\n    authors: [],\n    genres: [],\n    publisher: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBook({\n      ...book,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Create a single DTO for the entire Book entity\n      const bookDto = {\n        title: book.title,\n        authors: book.authors,\n        genres: book.genres,\n        publisher: book.publisher\n      };\n\n      // Send a POST request with the Book DTO\n      await axios.post('http://localhost:8080/api/books', bookDto, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Clear the form after successful submission\n      setBook({\n        title: '',\n        authors: [],\n        genres: [],\n        publisher: ''\n      });\n      console.log('Book added successfully!');\n    } catch (error) {\n      console.error('Error adding book:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(AddBookForm, \"cVoL4kFjTs12NAbPqHPtv9SCAPQ=\");\n_c = AddBookForm;\nexport default AddBookForm;\nvar _c;\n$RefreshReg$(_c, \"AddBookForm\");","map":{"version":3,"names":["AddBookForm","_s","book","setBook","useState","title","authors","genres","publisher","handleChange","e","name","value","target","handleSubmit","preventDefault","bookDto","axios","post","headers","console","log","error","_jsxDEV","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/AddBookForm.js"],"sourcesContent":["// Other imports...\r\n\r\nconst AddBookForm = () => {\r\n    const [book, setBook] = useState({\r\n      title: '',\r\n      authors: [],\r\n      genres: [],\r\n      publisher: '',\r\n    });\r\n  \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setBook({ ...book, [name]: value });\r\n    };\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        // Create a single DTO for the entire Book entity\r\n        const bookDto = {\r\n          title: book.title,\r\n          authors: book.authors,\r\n          genres: book.genres,\r\n          publisher: book.publisher,\r\n        };\r\n  \r\n        // Send a POST request with the Book DTO\r\n        await axios.post('http://localhost:8080/api/books', bookDto, { headers: { 'Content-Type': 'application/json' } });\r\n  \r\n        // Clear the form after successful submission\r\n        setBook({\r\n          title: '',\r\n          authors: [],\r\n          genres: [],\r\n          publisher: '',\r\n        });\r\n  \r\n        console.log('Book added successfully!');\r\n      } catch (error) {\r\n        console.error('Error adding book:', error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        {/* ... (unchanged form inputs) */}\r\n        <button type=\"submit\">Add Book</button>\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  export default AddBookForm;\r\n  "],"mappings":";;;AAAA;;AAEA,MAAMA,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC;IAC/BC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCV,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACS,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,OAAO,GAAG;QACdX,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,OAAO,EAAEJ,IAAI,CAACI,OAAO;QACrBC,MAAM,EAAEL,IAAI,CAACK,MAAM;QACnBC,SAAS,EAAEN,IAAI,CAACM;MAClB,CAAC;;MAED;MACA,MAAMS,KAAK,CAACC,IAAI,CAAC,iCAAiC,EAAEF,OAAO,EAAE;QAAEG,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAAE,CAAC,CAAC;;MAEjH;MACAhB,OAAO,CAAC;QACNE,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE;MACb,CAAC,CAAC;MAEFY,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEC,OAAA;IAAMC,QAAQ,EAAEV,YAAa;IAAAW,QAAA,eAE3BF,OAAA;MAAQG,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA/CED,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAiDf,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}