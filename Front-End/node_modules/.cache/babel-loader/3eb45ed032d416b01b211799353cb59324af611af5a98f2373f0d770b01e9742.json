{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\components\\\\IndividualBookPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualBookPage = () => {\n  _s();\n  var _userData$roles$some, _userData$roles;\n  const {\n    id\n  } = useParams();\n  const [book, setBook] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [loadingReviews, setLoadingReviews] = useState(true);\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const [userDataReady, setUserDataReady] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [selectedReviewId, setSelectedReviewId] = useState(null);\n  const [newComment, setNewComment] = useState({\n    text: ''\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [editedBook, setEditedBook] = useState(null);\n  const [newAuthor, setNewAuthor] = useState({\n    firstName: '',\n    lastName: ''\n  });\n  const [newGenre, setNewGenre] = useState('');\n\n  // State for new review\n  const [newReview, setNewReview] = useState({\n    user: {\n      id: null // Replace with the actual user ID from authentication\n    },\n    book: {\n      id: id // Set the book ID to the current page's book ID\n    },\n    rating: 0,\n    text: \"\",\n    date: \"16-01-2024\",\n    // You can update the date format as needed\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch individual book details based on the ID\n        const bookResponse = await fetch(`http://localhost:8080/book/${id}`);\n        const bookData = await bookResponse.json();\n        setBook(bookData);\n\n        // Update the book ID in newReview when the book data is available\n        setNewReview(prevReview => ({\n          ...prevReview,\n          book: {\n            id: bookData.id\n          }\n        }));\n\n        // Fetch reviews for the individual book\n        const reviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\n        const reviewsData = await reviewsResponse.json();\n        setReviews(reviewsData);\n\n        // Fetch comments for each review and update the state\n        const commentsPromises = reviewsData.map(async review => {\n          const commentsResponse = await fetch(`http://localhost:8080/comment/review/${review.id}`);\n          const commentsData = await commentsResponse.json();\n          return {\n            reviewId: review.id,\n            comments: commentsData\n          };\n        });\n        const commentsData = await Promise.all(commentsPromises);\n        const commentsObject = commentsData.reduce((acc, {\n          reviewId,\n          comments\n        }) => {\n          acc[reviewId] = comments;\n          return acc;\n        }, {});\n        setComments(commentsObject);\n      } catch (error) {\n        console.error(`Error fetching book ${id} details:`, error);\n      }\n\n      // Fetch user data\n      try {\n        const userDataResponse = await axios.get(`http://localhost:8080/user/findByUsername/${localStorage.getItem('username')}`);\n        setUserData(userDataResponse.data);\n        setUserDataReady(true); // Indicate that user data is ready\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n      setLoadingReviews(false);\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    if (userDataReady && newReview.user.id === null) {\n      setNewReview(prevReview => ({\n        ...prevReview,\n        user: {\n          id: userData.id\n        }\n      }));\n    }\n  }, [userDataReady, newReview, userData]);\n  const handleReviewSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Set the current date\n      const currentDate = new Date();\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      };\n      const formattedDate = currentDate.toLocaleDateString('en-GB', options);\n\n      // Update the newReview object with the current date\n      setNewReview(prevReview => ({\n        ...prevReview,\n        date: formattedDate\n      }));\n\n      // Send the new review to the server using Axios\n      await axios.post('http://localhost:8080/review/add', newReview, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refetch reviews from the server after submitting a new review\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\n      const updatedReviewsData = await updatedReviewsResponse.json();\n      setReviews(updatedReviewsData);\n      const lastAddedReview = updatedReviewsData[updatedReviewsData.length - 1];\n      const updatedCommentsResponse = await fetch(`http://localhost:8080/comment/review/${lastAddedReview.id}`);\n      const updatedCommentsData = await updatedCommentsResponse.json();\n\n      // Update comments state by adding comments for the last added review\n      setComments(prevComments => ({\n        ...prevComments,\n        [lastAddedReview.id]: updatedCommentsData\n      }));\n\n      // Clear the new review form\n      setNewReview({\n        user: {\n          id: userData.id\n        },\n        book: {\n          id: id\n        },\n        rating: 0,\n        text: \"\",\n        date: formattedDate,\n        // Set the date to the current date\n        comments: []\n      });\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      // Handle error as needed\n    }\n  };\n  const handleDeleteBook = () => {\n    if (isAdmin) {\n      axios.delete('http://localhost:8080/book/deleteByTitle', {\n        data: {\n          title: book.title\n        },\n        // Pass the bookId as data for the DELETE request\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Book deleted successfully:', response.data);\n        navigate('/book-list');\n        // You may want to navigate to a different page or update the UI as needed\n      }).catch(error => {\n        console.error('Error deleting book:', error);\n        // Handle the error, e.g., display an error message to the user\n      });\n    } else {\n      console.log('User does not have the required role for deletion.');\n      // Optionally, you can provide feedback to the user that they don't have the required role\n    }\n  };\n  const handleBackToBook = () => {\n    navigate('/book-list');\n  };\n  const isAdmin = (_userData$roles$some = userData === null || userData === void 0 ? void 0 : (_userData$roles = userData.roles) === null || _userData$roles === void 0 ? void 0 : _userData$roles.some(role => role.roleName === 'ADMIN')) !== null && _userData$roles$some !== void 0 ? _userData$roles$some : false;\n  const isLoggedIn = userData !== null && userData !== void 0 ? userData : false;\n  if (!book || loadingReviews) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n  const handleCommentSubmit = async reviewId => {\n    try {\n      const currentDate = new Date();\n      const formattedDate = currentDate.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      });\n      const commentData = {\n        user: {\n          id: userData.id\n        },\n        review: {\n          id: reviewId\n        },\n        text: newComment.text,\n        date: formattedDate\n      };\n\n      // Make a POST request to add the comment\n      await axios.post('http://localhost:8080/comment/add', commentData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refetch comments for the selected review\n      const updatedCommentsResponse = await fetch(`http://localhost:8080/comment/review/${reviewId}`);\n      const updatedCommentsData = await updatedCommentsResponse.json();\n      setComments(prevComments => ({\n        ...prevComments,\n        [reviewId]: updatedCommentsData\n      }));\n\n      // Clear the new comment form\n      setNewComment({\n        text: ''\n      });\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n      // Handle error as needed\n    }\n  };\n  const handleAuthorChange = (index, key, value) => {\n    setEditedBook(prevBook => ({\n      ...prevBook,\n      authors: prevBook.authors.map((author, i) => i === index ? {\n        ...author,\n        [key]: value\n      } : author)\n    }));\n  };\n  const handleRemoveAuthor = index => {\n    setEditedBook(prevBook => ({\n      ...prevBook,\n      authors: prevBook.authors.filter((_, i) => i !== index)\n    }));\n  };\n  const handleAddAuthor = () => {\n    setEditedBook(prevBook => ({\n      ...prevBook,\n      authors: [...prevBook.authors, newAuthor]\n    }));\n    setNewAuthor({\n      firstName: '',\n      lastName: ''\n    });\n  };\n  const handleGenreChange = (index, value) => {\n    setEditedBook(prevBook => ({\n      ...prevBook,\n      genres: prevBook.genres.map((genre, i) => i === index ? {\n        ...genre,\n        name: value\n      } : genre)\n    }));\n  };\n  const handleRemoveGenre = index => {\n    setEditedBook(prevBook => ({\n      ...prevBook,\n      genres: prevBook.genres.filter((_, i) => i !== index)\n    }));\n  };\n  const handleAddGenre = () => {\n    setEditedBook(prevBook => ({\n      ...prevBook,\n      genres: [...prevBook.genres, {\n        name: newGenre\n      }]\n    }));\n    setNewGenre('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '400px',\n      marginRight: '200px',\n      backgroundColor: ''\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author: \", book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 7\n      }, this), book.publisher && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Publisher: \", book.publisher.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genres: \", book.genres.map(genre => genre.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'justify',\n          lineHeight: '1.5',\n          fontSize: '16px',\n          color: '#333'\n        },\n        children: [\"Description: \", book.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), Array.isArray(reviews) && reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this book.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(1, 1fr)',\n        gap: '16px',\n        marginRight: 300\n      },\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '16px',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            position: 'relative',\n            top: '-10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"User: \", review.user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", review.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedReviewId(selectedReviewId === review.id ? null : review.id),\n          children: selectedReviewId === review.id ? 'Hide Comments' : 'Show Comments'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this), selectedReviewId === review.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(comments[review.id]) && comments[review.id].length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No comments available for this review.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 23\n            }, this) : comments[review.id].map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [comment.text, \" - \", comment.date, \" by \", comment.user.username]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleCommentSubmit(review.id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Add a Comment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"3\",\n              cols: \"40\",\n              value: newComment.text,\n              onChange: e => setNewComment({\n                text: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '',\n        marginRight: '',\n        backgroundColor: '',\n        position: 'absolute',\n        top: 150,\n        left: 1240\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReviewSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: '10px'\n          },\n          type: \"number\",\n          min: \"0\",\n          max: \"10\",\n          step: \"0.1\",\n          value: newReview.rating,\n          onChange: e => setNewReview({\n            ...newReview,\n            rating: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Review:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"40\",\n          value: newReview.text,\n          onChange: e => setNewReview({\n            ...newReview,\n            text: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            position: 'absolute',\n            left: 250\n          },\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        bookId: book.id,\n        on: true,\n        onClick: handleDeleteBook,\n        style: {\n          position: 'absolute',\n          top: 100,\n          left: 1500\n        },\n        children: \"Delete Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(true),\n        style: {\n          position: 'absolute',\n          top: 100,\n          left: 1400\n        },\n        children: \"Edit Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this), editMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '',\n        marginRight: '',\n        backgroundColor: '',\n        position: 'absolute',\n        top: 150,\n        left: 1240\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Book:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedBook.title,\n          onChange: e => setEditedBook({\n            ...editedBook,\n            title: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Authors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), editedBook.authors.map((author, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: author.firstName,\n            onChange: e => handleAuthorChange(index, 'firstName', e.target.value),\n            placeholder: \"First Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: author.lastName,\n            onChange: e => handleAuthorChange(index, 'lastName', e.target.value),\n            placeholder: \"Last Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveAuthor(index),\n            children: \"Remove Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddAuthor,\n          children: \"Add Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), editedBook.genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: genre.name,\n            onChange: e => handleGenreChange(index, e.target.value),\n            placeholder: \"Genre\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveGenre(index),\n            children: \"Remove Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddGenre,\n          children: \"Add Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"40\",\n          value: editedBook.description,\n          onChange: e => setEditedBook({\n            ...editedBook,\n            description: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            position: 'absolute',\n            left: 250\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setEditMode(false),\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToBook,\n      style: {\n        position: 'absolute',\n        left: 30,\n        top: 100\n      },\n      children: \"Back to Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualBookPage, \"dT1gaey2f5YuJmdg2bQVpJvekQk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = IndividualBookPage;\nexport default IndividualBookPage;\nvar _c;\n$RefreshReg$(_c, \"IndividualBookPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","IndividualBookPage","_s","_userData$roles$some","_userData$roles","id","book","setBook","reviews","setReviews","loadingReviews","setLoadingReviews","userData","setUserData","navigate","userDataReady","setUserDataReady","comments","setComments","selectedReviewId","setSelectedReviewId","newComment","setNewComment","text","editMode","setEditMode","editedBook","setEditedBook","newAuthor","setNewAuthor","firstName","lastName","newGenre","setNewGenre","newReview","setNewReview","user","rating","date","fetchData","bookResponse","fetch","bookData","json","prevReview","reviewsResponse","reviewsData","commentsPromises","map","review","commentsResponse","commentsData","reviewId","Promise","all","commentsObject","reduce","acc","error","console","userDataResponse","get","localStorage","getItem","data","handleReviewSubmit","e","preventDefault","currentDate","Date","options","day","month","year","formattedDate","toLocaleDateString","post","headers","updatedReviewsResponse","updatedReviewsData","lastAddedReview","length","updatedCommentsResponse","updatedCommentsData","prevComments","handleDeleteBook","isAdmin","delete","title","then","response","log","catch","handleBackToBook","roles","some","role","roleName","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCommentSubmit","commentData","handleAuthorChange","index","key","value","prevBook","authors","author","i","handleRemoveAuthor","filter","_","handleAddAuthor","handleGenreChange","genres","genre","name","handleRemoveGenre","handleAddGenre","style","marginLeft","marginRight","backgroundColor","join","publisher","textAlign","lineHeight","fontSize","color","description","Array","isArray","display","gridTemplateColumns","gap","border","padding","borderRadius","cursor","justifyContent","position","top","username","onClick","comment","onSubmit","rows","cols","onChange","target","required","type","left","min","max","step","bookId","on","handleEditSubmit","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/components/IndividualBookPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst IndividualBookPage = () => {\r\n  const { id } = useParams();\r\n  const [book, setBook] = useState(null);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loadingReviews, setLoadingReviews] = useState(true);\r\n  const [userData, setUserData] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [userDataReady, setUserDataReady] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [selectedReviewId, setSelectedReviewId] = useState(null);\r\n  const [newComment, setNewComment] = useState({\r\n    text: '',\r\n  });\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editedBook, setEditedBook] = useState(null);\r\n  const [newAuthor, setNewAuthor] = useState({ firstName: '', lastName: '' });\r\n  const [newGenre, setNewGenre] = useState('');\r\n \r\n  // State for new review\r\n  const [newReview, setNewReview] = useState({\r\n    user: {\r\n      id: null, // Replace with the actual user ID from authentication\r\n    },\r\n    book: {\r\n      id: id, // Set the book ID to the current page's book ID\r\n    },\r\n    rating: 0,\r\n    text: \"\",\r\n    date: \"16-01-2024\", // You can update the date format as needed\r\n    comments: [],\r\n  });\r\n\r\n useEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      // Fetch individual book details based on the ID\r\n      const bookResponse = await fetch(`http://localhost:8080/book/${id}`);\r\n      const bookData = await bookResponse.json();\r\n      setBook(bookData);\r\n\r\n      // Update the book ID in newReview when the book data is available\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        book: {\r\n          id: bookData.id,\r\n        },\r\n      }));\r\n\r\n      // Fetch reviews for the individual book\r\n      const reviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\r\n      const reviewsData = await reviewsResponse.json();\r\n      setReviews(reviewsData);\r\n\r\n      // Fetch comments for each review and update the state\r\n      const commentsPromises = reviewsData.map(async (review) => {\r\n        const commentsResponse = await fetch(`http://localhost:8080/comment/review/${review.id}`);\r\n        const commentsData = await commentsResponse.json();\r\n        return { reviewId: review.id, comments: commentsData };\r\n      });\r\n\r\n      const commentsData = await Promise.all(commentsPromises);\r\n      const commentsObject = commentsData.reduce((acc, { reviewId, comments }) => {\r\n        acc[reviewId] = comments;\r\n        return acc;\r\n      }, {});\r\n\r\n      setComments(commentsObject);\r\n    } catch (error) {\r\n      console.error(`Error fetching book ${id} details:`, error);\r\n    }\r\n\r\n    // Fetch user data\r\n    try {\r\n      const userDataResponse = await axios.get(`http://localhost:8080/user/findByUsername/${localStorage.getItem('username')}`);\r\n      setUserData(userDataResponse.data);\r\n      setUserDataReady(true); // Indicate that user data is ready\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n\r\n    setLoadingReviews(false);\r\n  };\r\n\r\n  fetchData();\r\n}, [id]);\r\n\r\n\r\nuseEffect(() => {\r\n    if (userDataReady && newReview.user.id === null) {\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        user: {\r\n          id: userData.id,\r\n        },\r\n      }));\r\n    }\r\n  }, [userDataReady, newReview, userData]);\r\n\r\n\r\n  \r\n\r\n  const handleReviewSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Set the current date\r\n      const currentDate = new Date();\r\n      const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n      const formattedDate = currentDate.toLocaleDateString('en-GB', options);\r\n\r\n      // Update the newReview object with the current date\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        date: formattedDate,\r\n      }));\r\n\r\n      // Send the new review to the server using Axios\r\n      await axios.post('http://localhost:8080/review/add', newReview, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      // Refetch reviews from the server after submitting a new review\r\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\r\n      const updatedReviewsData = await updatedReviewsResponse.json();\r\n\r\n      setReviews(updatedReviewsData);\r\n\r\n      const lastAddedReview = updatedReviewsData[updatedReviewsData.length - 1];\r\n      const updatedCommentsResponse = await fetch(`http://localhost:8080/comment/review/${lastAddedReview.id}`);\r\n      const updatedCommentsData = await updatedCommentsResponse.json();\r\n\r\n      // Update comments state by adding comments for the last added review\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [lastAddedReview.id]: updatedCommentsData,\r\n      }));\r\n\r\n      // Clear the new review form\r\n      setNewReview({\r\n        user: {\r\n          id: userData.id,\r\n        },\r\n        book: {\r\n          id: id,\r\n        },\r\n        rating: 0,\r\n        text: \"\",\r\n        date: formattedDate, // Set the date to the current date\r\n        comments:[],\r\n      });\r\n    \r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteBook = () => {\r\n  if (isAdmin) {\r\n\r\n    axios.delete('http://localhost:8080/book/deleteByTitle', {\r\n      data: { title : book.title }, // Pass the bookId as data for the DELETE request\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('Book deleted successfully:', response.data);\r\n        navigate('/book-list');\r\n        // You may want to navigate to a different page or update the UI as needed\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting book:', error);\r\n        // Handle the error, e.g., display an error message to the user\r\n      });\r\n  } else {\r\n    console.log('User does not have the required role for deletion.');\r\n    // Optionally, you can provide feedback to the user that they don't have the required role\r\n  }\r\n};\r\n\r\nconst handleBackToBook = () => {\r\n  navigate('/book-list');\r\n}  \r\n\r\n  const isAdmin = userData?.roles?.some(role => role.roleName === 'ADMIN') ?? false;\r\n  const isLoggedIn = userData ?? false;\r\n\r\n  if (!book || loadingReviews) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n   const handleCommentSubmit = async (reviewId) => {\r\n    try {\r\n      const currentDate = new Date();\r\n      const formattedDate = currentDate.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' });\r\n\r\n      const commentData = {\r\n        user: {\r\n          id: userData.id,\r\n        },\r\n        review: {\r\n          id: reviewId,\r\n        },\r\n        text: newComment.text,\r\n        date: formattedDate,\r\n      };\r\n\r\n      // Make a POST request to add the comment\r\n      await axios.post('http://localhost:8080/comment/add', commentData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      // Refetch comments for the selected review\r\n      const updatedCommentsResponse = await fetch(`http://localhost:8080/comment/review/${reviewId}`);\r\n      const updatedCommentsData = await updatedCommentsResponse.json();\r\n\r\n      setComments(prevComments => ({\r\n        ...prevComments,\r\n        [reviewId]: updatedCommentsData,\r\n      }));\r\n\r\n      // Clear the new comment form\r\n      setNewComment({\r\n        text: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error submitting comment:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  const handleAuthorChange = (index, key, value) => {\r\n    setEditedBook((prevBook) => ({\r\n      ...prevBook,\r\n      authors: prevBook.authors.map((author, i) =>\r\n        i === index ? { ...author, [key]: value } : author\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const handleRemoveAuthor = (index) => {\r\n    setEditedBook((prevBook) => ({\r\n      ...prevBook,\r\n      authors: prevBook.authors.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleAddAuthor = () => {\r\n    setEditedBook((prevBook) => ({\r\n      ...prevBook,\r\n      authors: [...prevBook.authors, newAuthor],\r\n    }));\r\n    setNewAuthor({ firstName: '', lastName: '' });\r\n  };\r\n\r\n  const handleGenreChange = (index, value) => {\r\n    setEditedBook((prevBook) => ({\r\n      ...prevBook,\r\n      genres: prevBook.genres.map((genre, i) => (i === index ? { ...genre, name: value } : genre)),\r\n    }));\r\n  };\r\n\r\n  const handleRemoveGenre = (index) => {\r\n    setEditedBook((prevBook) => ({\r\n      ...prevBook,\r\n      genres: prevBook.genres.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleAddGenre = () => {\r\n    setEditedBook((prevBook) => ({\r\n      ...prevBook,\r\n      genres: [...prevBook.genres, { name: newGenre }],\r\n    }));\r\n    setNewGenre('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft :'400px',marginRight :'200px',backgroundColor:'' }}>\r\n      <div style={{marginRight:300}}>\r\n      <h2>{book.title}</h2>\r\n      <p>Author: {book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')}</p>\r\n      {book.publisher && (\r\n        <p>Publisher: {book.publisher.name}</p>\r\n      )}\r\n      <p>Genres: {book.genres.map(genre => genre.name).join(', ')}</p>\r\n      <p style={{ textAlign: 'justify', lineHeight: '1.5', fontSize: '16px', color: '#333' }}>Description: {book.description}</p>\r\n      </div>\r\n      <h3>Reviews:</h3>\r\n      {Array.isArray(reviews) && reviews.length === 0 ? (\r\n        <p>No reviews available for this book.</p>\r\n      ) : (\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(1, 1fr)', gap: '16px', marginRight:300}}>\r\n          {reviews.map(review => (\r\n            <div key={review.id}style={{ border: '1px solid #ccc', padding: '16px', borderRadius: '8px', cursor: 'pointer' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between',position:'relative', top:'-10px' }}>\r\n                <div style={{ marginRight: '30px' }}>\r\n                  <p>User: {review.user.username}</p>\r\n                </div>\r\n              <div>\r\n                <p>Date: {review.date}</p>\r\n              </div>\r\n              </div>\r\n              <p>Rating: {review.rating}</p>\r\n              <p>{review.text}</p>\r\n              {//<p>Date: {review.date}</p>\r\n              }\r\n             {/* Dropdown to toggle comments visibility */}\r\n              <button onClick={() => setSelectedReviewId(selectedReviewId === review.id ? null : review.id)}>\r\n                {selectedReviewId === review.id ? 'Hide Comments' : 'Show Comments'}\r\n              </button>\r\n\r\n              {/* Display comments for the review if it's selected */}\r\n              {selectedReviewId === review.id && (\r\n                <div>\r\n                  <h4>Comments:</h4>\r\n                  <ul>\r\n                    {Array.isArray(comments[review.id]) && comments[review.id].length === 0 ? (\r\n                      <li>No comments available for this review.</li>\r\n                    ) : (\r\n                      comments[review.id].map(comment => (\r\n                        <li key={comment.id}>\r\n                          {comment.text} - {comment.date} by {comment.user.username}\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                   {/* Form for adding a new comment */}\r\n                  <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleCommentSubmit(review.id);\r\n                  }}>\r\n                    <label>Add a Comment:</label>\r\n                    <br />\r\n                    <textarea\r\n                      rows=\"3\"\r\n                      cols=\"40\"\r\n                      value={newComment.text}\r\n                      onChange={(e) => setNewComment({ text: e.target.value })}\r\n                      required\r\n                    />\r\n                    <br />\r\n                    <button type=\"submit\">Submit Comment</button>\r\n                  </form>\r\n               </div>\r\n              )}\r\n            </div>\r\n              \r\n          ))}\r\n          \r\n        </div>\r\n      )}\r\n\r\n      \r\n      {isLoggedIn && (\r\n      <div style={{ marginLeft :'',marginRight :'',backgroundColor:'',position: 'absolute', top: 150, left: 1240 }}>\r\n      {/* Form for adding a new review */}\r\n      \r\n      <h3>Add a Review:</h3>\r\n      <form onSubmit={handleReviewSubmit}>\r\n        <label style={{ marginRight :'10px'}}>Rating:</label>\r\n        <input style={{ marginLeft :'10px'}}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"10\"\r\n          step=\"0.1\"\r\n          value={newReview.rating}\r\n          onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\r\n          required\r\n        />\r\n        <br />\r\n    \r\n        <br ></br>\r\n        <label >Review:</label>\r\n        <br></br>\r\n        <br></br>\r\n        <textarea rows= \"5\" cols = \"40\"\r\n          value={newReview.text}\r\n          onChange={(e) => setNewReview({ ...newReview, text: e.target.value })}\r\n          required\r\n        />\r\n        <br></br>\r\n        <br />\r\n        <button type=\"submit\" style = {{ position :'absolute', left : 250}}>Submit Review</button>\r\n      </form>\r\n      </div>\r\n      )}\r\n\r\n      {isAdmin && (\r\n        <div>\r\n        <button bookId={book.id} on onClick={handleDeleteBook} \r\n        style={{ position: 'absolute', top: 100, left: 1500 }}\r\n        >Delete Book</button>\r\n        \r\n        <button onClick={() => setEditMode(true)} style={{ position: 'absolute', top: 100, left: 1400 }}>\r\n        Edit Book\r\n        </button>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div style={{ marginLeft: '', marginRight: '', backgroundColor: '', position: 'absolute', top: 150, left: 1240 }}>\r\n          <h3>Edit Book:</h3>\r\n          <form onSubmit={handleEditSubmit}>\r\n            {/* Title */}\r\n            <label>Title:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={editedBook.title}\r\n              onChange={(e) => setEditedBook({ ...editedBook, title: e.target.value })}\r\n              required\r\n            />\r\n            <br />\r\n\r\n            {/* Authors (assuming it's an array of objects with firstName and lastName) */}\r\n            <label>Authors:</label>\r\n            <br />\r\n            {editedBook.authors.map((author, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={author.firstName}\r\n                  onChange={(e) => handleAuthorChange(index, 'firstName', e.target.value)}\r\n                  placeholder=\"First Name\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={author.lastName}\r\n                  onChange={(e) => handleAuthorChange(index, 'lastName', e.target.value)}\r\n                  placeholder=\"Last Name\"\r\n                  required\r\n                />\r\n                <button type=\"button\" onClick={() => handleRemoveAuthor(index)}>\r\n                  Remove Author\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button type=\"button\" onClick={handleAddAuthor}>\r\n              Add Author\r\n            </button>\r\n            <br />\r\n\r\n            {/* Genres (assuming it's an array of objects with name) */}\r\n            <label>Genres:</label>\r\n            <br />\r\n            {editedBook.genres.map((genre, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={genre.name}\r\n                  onChange={(e) => handleGenreChange(index, e.target.value)}\r\n                  placeholder=\"Genre\"\r\n                  required\r\n                />\r\n                <button type=\"button\" onClick={() => handleRemoveGenre(index)}>\r\n                  Remove Genre\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button type=\"button\" onClick={handleAddGenre}>\r\n              Add Genre\r\n            </button>\r\n            <br />\r\n\r\n            {/* Description */}\r\n            <label>Description:</label>\r\n            <br />\r\n            <textarea\r\n              rows=\"5\"\r\n              cols=\"40\"\r\n              value={editedBook.description}\r\n              onChange={(e) => setEditedBook({ ...editedBook, description: e.target.value })}\r\n              required\r\n            />\r\n            <br />\r\n\r\n            <button type=\"submit\" style={{ position: 'absolute', left: 250 }}>\r\n              Save Changes\r\n            </button>\r\n            <button type=\"button\" onClick={() => setEditMode(false)} style={{ marginLeft: '10px' }}>\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <br />\r\n      <button onClick={handleBackToBook}\r\n      style = {{position : 'absolute', left : 30, top:100}}>Back to Books</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualBookPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}