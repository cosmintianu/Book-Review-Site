{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\AddBookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBookForm = () => {\n  _s();\n  const [book, setBook] = useState({\n    title: '',\n    authors: new Set()\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBook({\n      ...book,\n      [name]: value\n    });\n  };\n  const handleAuthorsChange = e => {\n    const authorsInput = e.target.value;\n    const authorsArray = authorsInput.split(',').map(author => {\n      const [firstName, ...rest] = author.trim().split(' ');\n      const lastName = rest.join(' ').trim();\n      return {\n        firstName,\n        lastName\n      };\n    });\n    setBook(prevBook => ({\n      ...prevBook,\n      authors: new Set(authorsArray)\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Create a single DTO for the entire Book entity\n      const bookDto = {\n        title: book.title,\n        authors: Array.from(book.authors)\n      };\n\n      // Send a POST request with the Book DTO\n      await axios.post('http://localhost:8080/book/add', bookDto, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Clear the form after successful submission\n      setBook({\n        title: '',\n        authors: new Set()\n      });\n      console.log('Book added successfully!');\n    } catch (error) {\n      console.error('Error adding book:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: book.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Authors (comma-separated, first and last name):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"authors\",\n      value: Array.from(book.authors).map(author => `${author.firstName} ${author.lastName}`).join(','),\n      onChange: handleAuthorsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBookForm, \"iKRSgnsmjKzDgi2It4jG6EIYkN8=\");\n_c = AddBookForm;\nexport default AddBookForm;\nvar _c;\n$RefreshReg$(_c, \"AddBookForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddBookForm","_s","book","setBook","title","authors","Set","handleChange","e","name","value","target","handleAuthorsChange","authorsInput","authorsArray","split","map","author","firstName","rest","trim","lastName","join","prevBook","handleSubmit","preventDefault","bookDto","Array","from","post","headers","console","log","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/AddBookForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddBookForm = () => {\r\n  const [book, setBook] = useState({\r\n    title: '',\r\n    authors: new Set(),\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setBook({ ...book, [name]: value });\r\n  };\r\n\r\n  const handleAuthorsChange = (e) => {\r\n    const authorsInput = e.target.value;\r\n    const authorsArray = authorsInput.split(',').map((author) => {\r\n      const [firstName, ...rest] = author.trim().split(' ');\r\n      const lastName = rest.join(' ').trim();\r\n      return { firstName, lastName };\r\n    });\r\n    setBook((prevBook) => ({ ...prevBook, authors: new Set(authorsArray) }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Create a single DTO for the entire Book entity\r\n      const bookDto = {\r\n        title: book.title,\r\n        authors: Array.from(book.authors),\r\n      };\r\n\r\n      // Send a POST request with the Book DTO\r\n      await axios.post('http://localhost:8080/book/add', bookDto, { headers: { 'Content-Type': 'application/json' } });\r\n\r\n      // Clear the form after successful submission\r\n      setBook({\r\n        title: '',\r\n        authors: new Set(),\r\n      });\r\n\r\n      console.log('Book added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding book:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Title:</label>\r\n      <input type=\"text\" name=\"title\" value={book.title} onChange={handleChange} />\r\n\r\n      <label>Authors (comma-separated, first and last name):</label>\r\n      <input type=\"text\" name=\"authors\" value={Array.from(book.authors).map((author) => `${author.firstName} ${author.lastName}`).join(',')} onChange={handleAuthorsChange} />\r\n\r\n      <button type=\"submit\">Add Book</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddBookForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}