{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\components\\\\IndividualBookPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualBookPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [book, setBook] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [loadingReviews, setLoadingReviews] = useState(true);\n  const [userData, setUserData] = useState(null);\n\n  // State for new review\n  const [newReview, setNewReview] = useState({\n    user: {\n      id: 6 // Replace with the actual user ID from authentication\n    },\n    book: {\n      id: id // Set the book ID to the current page's book ID\n    },\n    rating: 0,\n    text: \"\",\n    date: \"\" // You can update the date format as needed\n  });\n  useEffect(() => {\n    // Fetch individual book details based on the ID\n    fetch(`http://localhost:8080/book/${id}`).then(response => response.json()).then(data => {\n      setBook(data);\n      // Update the book ID in newReview when the book data is available\n      setNewReview(prevReview => ({\n        ...prevReview,\n        book: {\n          id: data.id\n        }\n      }));\n    }).catch(error => console.error(`Error fetching book ${id} details:`, error));\n\n    // Fetch reviews for the individual book using the updated endpoint\n    fetch(`http://localhost:8080/review/book/${id}`).then(response => response.json()).then(data => setReviews(data)).catch(error => console.error(`Error fetching reviews for book ${id}:`, error)).finally(() => setLoadingReviews(false));\n  }, [id]);\n  const handleReviewSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Set the current date\n      const currentDate = new Date();\n      const formattedDate = currentDate.toISOString().split('T')[0];\n\n      // Update the newReview object with the current date\n      setNewReview(prevReview => ({\n        ...prevReview,\n        date: formattedDate\n      }));\n\n      // Send the new review to the server using Axios\n      await axios.post('http://localhost:8080/review/add', newReview, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refetch reviews from the server after submitting a new review\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\n      const updatedReviewsData = await updatedReviewsResponse.json();\n      setReviews(updatedReviewsData);\n\n      // Clear the new review form\n      setNewReview({\n        user: {\n          id: null // Replace with the actual user ID from authentication\n        },\n        book: {\n          id: id\n        },\n        rating: 0,\n        text: \"\",\n        date: formattedDate // Set the date to the current date\n      });\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      // Handle error as needed\n    }\n  };\n  const fetchUserData = async () => {\n    const username = localStorage.getItem('username');\n    try {\n      const response = await axios.get(`http://localhost:8080/user/findByUsername/${username}`);\n      setUserData(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  const isLoggedIn = !!userData;\n  if (!book || loadingReviews) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), book.publisher && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publisher: \", book.publisher.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", book.genres.map(genre => genre.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), Array.isArray(reviews) && reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this book.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", review.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", review.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Review:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReviewSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newReview.rating,\n        onChange: e => setNewReview({\n          ...newReview,\n          rating: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newReview.text,\n        onChange: e => setNewReview({\n          ...newReview,\n          text: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualBookPage, \"Z90T9IStq2g2DU+7MjGzlG+XgsQ=\", false, function () {\n  return [useParams];\n});\n_c = IndividualBookPage;\nexport default IndividualBookPage;\nvar _c;\n$RefreshReg$(_c, \"IndividualBookPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","IndividualBookPage","_s","id","book","setBook","reviews","setReviews","loadingReviews","setLoadingReviews","userData","setUserData","newReview","setNewReview","user","rating","text","date","fetch","then","response","json","data","prevReview","catch","error","console","finally","handleReviewSubmit","e","preventDefault","currentDate","Date","formattedDate","toISOString","split","post","headers","updatedReviewsResponse","updatedReviewsData","fetchUserData","username","localStorage","getItem","get","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","title","authors","map","author","firstName","lastName","join","publisher","name","genres","genre","Array","isArray","length","review","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/components/IndividualBookPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst IndividualBookPage = () => {\r\n  const { id } = useParams();\r\n  const [book, setBook] = useState(null);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loadingReviews, setLoadingReviews] = useState(true);\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  // State for new review\r\n  const [newReview, setNewReview] = useState({\r\n    user: {\r\n      id: 6, // Replace with the actual user ID from authentication\r\n    },\r\n    book: {\r\n      id: id, // Set the book ID to the current page's book ID\r\n    },\r\n    rating: 0,\r\n    text: \"\",\r\n    date: \"\", // You can update the date format as needed\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch individual book details based on the ID\r\n    fetch(`http://localhost:8080/book/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setBook(data);\r\n        // Update the book ID in newReview when the book data is available\r\n        setNewReview(prevReview => ({\r\n          ...prevReview,\r\n          book: {\r\n            id: data.id,\r\n          },\r\n        }));\r\n      })\r\n      .catch(error => console.error(`Error fetching book ${id} details:`, error));\r\n\r\n    // Fetch reviews for the individual book using the updated endpoint\r\n    fetch(`http://localhost:8080/review/book/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => setReviews(data))\r\n      .catch(error => console.error(`Error fetching reviews for book ${id}:`, error))\r\n      .finally(() => setLoadingReviews(false));\r\n  }, [id]);\r\n\r\n  const handleReviewSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      // Set the current date\r\n      const currentDate = new Date();\r\n      const formattedDate = currentDate.toISOString().split('T')[0];\r\n  \r\n      // Update the newReview object with the current date\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        date: formattedDate,\r\n      }));\r\n  \r\n      // Send the new review to the server using Axios\r\n      await axios.post('http://localhost:8080/review/add', newReview, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      // Refetch reviews from the server after submitting a new review\r\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\r\n      const updatedReviewsData = await updatedReviewsResponse.json();\r\n      setReviews(updatedReviewsData);\r\n  \r\n      // Clear the new review form\r\n      setNewReview({\r\n        user: {\r\n          id: null, // Replace with the actual user ID from authentication\r\n        },\r\n        book: {\r\n          id: id,\r\n        },\r\n        rating: 0,\r\n        text: \"\",\r\n        date: formattedDate, // Set the date to the current date\r\n      });\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n  \r\n  const fetchUserData = async () => {\r\n    const username = localStorage.getItem('username');\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/user/findByUsername/${username}`\r\n      );\r\n  \r\n      setUserData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n  \r\n  const isLoggedIn = !!userData;\r\n\r\n  if (!book || loadingReviews) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{book.title}</h2>\r\n      <p>Author: {book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')}</p>\r\n      {book.publisher && (\r\n        <p>Publisher: {book.publisher.name}</p>\r\n      )}\r\n      <p>Genres: {book.genres.map(genre => genre.name).join(', ')}</p>\r\n      <h3>Reviews:</h3>\r\n      {Array.isArray(reviews) && reviews.length === 0 ? (\r\n        <p>No reviews available for this book.</p>\r\n      ) : (\r\n        <ul>\r\n          {reviews.map(review => (\r\n            <li key={review.id}>\r\n              <p>User: {review.user.username}</p>\r\n              <p>Rating: {review.rating}</p>\r\n              <p>{review.text}</p>\r\n              <p>Date: {review.date}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {/* Form for adding a new review */}\r\n      <h3>Add a Review:</h3>\r\n      <form onSubmit={handleReviewSubmit}>\r\n        {/* Remove the user input field as it's handled with the stored username */}\r\n        {/* <label>User:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={newReview.user.id}\r\n          onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\r\n          required\r\n        /> */}\r\n\r\n        <label>Rating:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={newReview.rating}\r\n          onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\r\n          required\r\n        />\r\n\r\n        <label>Review:</label>\r\n        <textarea\r\n          value={newReview.text}\r\n          onChange={(e) => setNewReview({ ...newReview, text: e.target.value })}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Submit Review</button>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualBookPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}