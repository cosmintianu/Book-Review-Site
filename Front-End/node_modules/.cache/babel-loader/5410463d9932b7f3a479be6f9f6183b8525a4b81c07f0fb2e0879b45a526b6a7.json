{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\components\\\\IndividualBookPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualBookPage = () => {\n  _s();\n  var _userData$roles$some, _userData$roles;\n  const {\n    id\n  } = useParams();\n  const [book, setBook] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [loadingReviews, setLoadingReviews] = useState(true);\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const [userDataReady, setUserDataReady] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  // State for new review\n  const [newReview, setNewReview] = useState({\n    user: {\n      id: null // Replace with the actual user ID from authentication\n    },\n    book: {\n      id: id // Set the book ID to the current page's book ID\n    },\n    rating: 0,\n    text: \"\",\n    date: \"16-01-2024\" // You can update the date format as needed\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch individual book details based on the ID\n      try {\n        const bookResponse = await fetch(`http://localhost:8080/book/${id}`);\n        const bookData = await bookResponse.json();\n        setBook(bookData);\n\n        // Update the book ID in newReview when the book data is available\n        setNewReview(prevReview => ({\n          ...prevReview,\n          book: {\n            id: bookData.id\n          }\n        }));\n      } catch (error) {\n        console.error(`Error fetching book ${id} details:`, error);\n      }\n\n      // Fetch reviews for the individual book using the updated endpoint\n      try {\n        const reviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\n        const reviewsData = await reviewsResponse.json();\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error(`Error fetching reviews for book ${id}:`, error);\n      }\n\n      // Fetch user data\n      try {\n        const userDataResponse = await axios.get(`http://localhost:8080/user/findByUsername/${localStorage.getItem('username')}`);\n        setUserData(userDataResponse.data);\n        setUserDataReady(true); // Indicate that user data is ready\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n      setLoadingReviews(false);\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    if (userDataReady && newReview.user.id === null) {\n      setNewReview(prevReview => ({\n        ...prevReview,\n        user: {\n          id: userData.id\n        }\n      }));\n    }\n  }, [userDataReady, newReview, userData]);\n  useEffect(() => {\n    // Fetch comments for each review\n    const fetchComments = async () => {\n      try {\n        // Fetch all comments related to the book\n        const commentsResponse = await axios.get(`http://localhost:8080/comment/review/${id}`);\n        setComments(commentsResponse.data);\n      } catch (error) {\n        console.error(`Error fetching comments for review ${id}:`, error);\n      }\n    };\n    fetchComments();\n  }, [id]);\n  const handleReviewSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Set the current date\n      const currentDate = new Date();\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      };\n      const formattedDate = currentDate.toLocaleDateString('en-GB', options);\n\n      // Update the newReview object with the current date\n      setNewReview(prevReview => ({\n        ...prevReview,\n        date: formattedDate\n      }));\n\n      // Send the new review to the server using Axios\n      await axios.post('http://localhost:8080/review/add', newReview, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refetch reviews from the server after submitting a new review\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\n      const updatedReviewsData = await updatedReviewsResponse.json();\n      setReviews(updatedReviewsData);\n\n      // Clear the new review form\n      setNewReview({\n        user: {\n          id: userData.id\n        },\n        book: {\n          id: id\n        },\n        rating: 0,\n        text: \"\",\n        date: formattedDate // Set the date to the current date\n      });\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      // Handle error as needed\n    }\n  };\n  const handleDeleteBook = () => {\n    if (isAdmin) {\n      axios.delete('http://localhost:8080/book/deleteByTitle', {\n        data: {\n          title: book.title\n        },\n        // Pass the bookId as data for the DELETE request\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Book deleted successfully:', response.data);\n        navigate('/book-list');\n        // You may want to navigate to a different page or update the UI as needed\n      }).catch(error => {\n        console.error('Error deleting book:', error);\n        // Handle the error, e.g., display an error message to the user\n      });\n    } else {\n      console.log('User does not have the required role for deletion.');\n      // Optionally, you can provide feedback to the user that they don't have the required role\n    }\n  };\n  const handleBackToBook = () => {\n    navigate('/book-list');\n  };\n  const isAdmin = (_userData$roles$some = userData === null || userData === void 0 ? void 0 : (_userData$roles = userData.roles) === null || _userData$roles === void 0 ? void 0 : _userData$roles.some(role => role.roleName === 'ADMIN')) !== null && _userData$roles$some !== void 0 ? _userData$roles$some : false;\n  const isLoggedIn = userData !== null && userData !== void 0 ? userData : false;\n  if (!book || loadingReviews) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  const handleCommentSubmit = async (reviewId, commentText) => {\n    try {\n      // Set the current date\n      const currentDate = new Date();\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      };\n      const formattedDate = currentDate.toLocaleDateString('en-GB', options);\n\n      // Create a new comment object\n      const newComment = {\n        text: commentText,\n        date: formattedDate,\n        reviewId: reviewId,\n        userId: userData.id\n      };\n\n      // Send the new comment to the server using Axios\n      await axios.post('http://localhost:8080/comment/add', newComment, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refetch comments for the review after submitting a new comment\n      const updatedCommentsResponse = await axios.get(`http://localhost:8080/comment/review/${reviewId}`);\n      const updatedCommentsData = updatedCommentsResponse.data;\n\n      // Update the comments state for the specific review\n      setComments(prevComments => ({\n        ...prevComments,\n        [reviewId]: updatedCommentsData\n      }));\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n      // Handle error as needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '300px',\n      marginRight: '300px',\n      backgroundColor: ''\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), book.publisher && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publisher: \", book.publisher.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", book.genres.map(genre => genre.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), Array.isArray(reviews) && reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this book.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(1, 1fr)',\n        gap: '16px',\n        marginRight: 300\n      },\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '16px',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            position: 'relative',\n            top: '-10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"User: \", review.user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", review.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), Array.isArray(comments[review.id]) && comments[review.id].length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No comments available for this review.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: comments[review.id].map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this), \" - \", comment.date, \" by \", comment.userId]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleCommentSubmit(review.id, e.target.commentText.value),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Add a Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"commentText\",\n            rows: \"2\",\n            cols: \"40\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '',\n        marginRight: '',\n        backgroundColor: '',\n        position: 'absolute',\n        top: 150,\n        left: 1240\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReviewSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: '10px'\n          },\n          type: \"number\",\n          min: \"0\",\n          max: \"10\",\n          step: \"0.1\",\n          value: newReview.rating,\n          onChange: e => setNewReview({\n            ...newReview,\n            rating: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Review:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"40\",\n          value: newReview.text,\n          onChange: e => setNewReview({\n            ...newReview,\n            text: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            position: 'absolute',\n            left: 250\n          },\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n      bookId: book.id,\n      on: true,\n      onClick: handleDeleteBook,\n      style: {\n        position: 'absolute',\n        top: 100,\n        left: 1500\n      },\n      children: \"Delete Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToBook,\n      style: {\n        position: 'absolute',\n        left: 30,\n        top: 100\n      },\n      children: \"Back to Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualBookPage, \"ypLMoUqNuye+VY/eLZMX0KFIFbE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = IndividualBookPage;\nexport default IndividualBookPage;\nvar _c;\n$RefreshReg$(_c, \"IndividualBookPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","IndividualBookPage","_s","_userData$roles$some","_userData$roles","id","book","setBook","reviews","setReviews","loadingReviews","setLoadingReviews","userData","setUserData","navigate","userDataReady","setUserDataReady","comments","setComments","newReview","setNewReview","user","rating","text","date","fetchData","bookResponse","fetch","bookData","json","prevReview","error","console","reviewsResponse","reviewsData","userDataResponse","get","localStorage","getItem","data","fetchComments","commentsResponse","handleReviewSubmit","e","preventDefault","currentDate","Date","options","day","month","year","formattedDate","toLocaleDateString","post","headers","updatedReviewsResponse","updatedReviewsData","handleDeleteBook","isAdmin","delete","title","then","response","log","catch","handleBackToBook","roles","some","role","roleName","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCommentSubmit","reviewId","commentText","newComment","userId","updatedCommentsResponse","updatedCommentsData","prevComments","style","marginLeft","marginRight","backgroundColor","authors","map","author","firstName","lastName","join","publisher","name","genres","genre","Array","isArray","length","display","gridTemplateColumns","gap","review","border","padding","borderRadius","cursor","justifyContent","position","top","username","comment","onSubmit","target","value","rows","cols","required","type","left","min","max","step","onChange","bookId","on","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/components/IndividualBookPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst IndividualBookPage = () => {\r\n  const { id } = useParams();\r\n  const [book, setBook] = useState(null);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loadingReviews, setLoadingReviews] = useState(true);\r\n  const [userData, setUserData] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [userDataReady, setUserDataReady] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n \r\n  // State for new review\r\n  const [newReview, setNewReview] = useState({\r\n    user: {\r\n      id: null, // Replace with the actual user ID from authentication\r\n    },\r\n    book: {\r\n      id: id, // Set the book ID to the current page's book ID\r\n    },\r\n    rating: 0,\r\n    text: \"\",\r\n    date: \"16-01-2024\", // You can update the date format as needed\r\n  });\r\n\r\n useEffect(() => {\r\n  const fetchData = async () => {\r\n\r\n    // Fetch individual book details based on the ID\r\n    try {\r\n      const bookResponse = await fetch(`http://localhost:8080/book/${id}`);\r\n      const bookData = await bookResponse.json();\r\n      setBook(bookData);\r\n\r\n      // Update the book ID in newReview when the book data is available\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        book: {\r\n          id: bookData.id,\r\n        },\r\n      }));\r\n    } catch (error) {\r\n      console.error(`Error fetching book ${id} details:`, error);\r\n    }\r\n\r\n    // Fetch reviews for the individual book using the updated endpoint\r\n    try {\r\n      const reviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\r\n      const reviewsData = await reviewsResponse.json();\r\n      setReviews(reviewsData);\r\n    } catch (error) {\r\n      console.error(`Error fetching reviews for book ${id}:`, error);\r\n    }\r\n\r\n    // Fetch user data\r\n      try {\r\n        const userDataResponse = await axios.get(`http://localhost:8080/user/findByUsername/${localStorage.getItem('username')}`);\r\n        setUserData(userDataResponse.data);\r\n        setUserDataReady(true); // Indicate that user data is ready\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    \r\n\r\n    setLoadingReviews(false);\r\n  };\r\n\r\n  fetchData();\r\n}, [id]);\r\n\r\nuseEffect(() => {\r\n    if (userDataReady && newReview.user.id === null) {\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        user: {\r\n          id: userData.id,\r\n        },\r\n      }));\r\n    }\r\n  }, [userDataReady, newReview, userData]);\r\n\r\nuseEffect(() => {\r\n    // Fetch comments for each review\r\n    const fetchComments = async () => {\r\n      try {\r\n        // Fetch all comments related to the book\r\n        const commentsResponse = await axios.get(`http://localhost:8080/comment/review/${id}`);\r\n        setComments(commentsResponse.data);\r\n      } catch (error) {\r\n        console.error(`Error fetching comments for review ${id}:`, error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [id]);\r\n  \r\n\r\n  const handleReviewSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Set the current date\r\n      const currentDate = new Date();\r\n      const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n      const formattedDate = currentDate.toLocaleDateString('en-GB', options);\r\n\r\n      // Update the newReview object with the current date\r\n      setNewReview((prevReview) => ({\r\n        ...prevReview,\r\n        date: formattedDate,\r\n      }));\r\n\r\n      // Send the new review to the server using Axios\r\n      await axios.post('http://localhost:8080/review/add', newReview, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      // Refetch reviews from the server after submitting a new review\r\n      const updatedReviewsResponse = await fetch(`http://localhost:8080/review/book/${id}`);\r\n      const updatedReviewsData = await updatedReviewsResponse.json();\r\n\r\n      setReviews(updatedReviewsData);\r\n\r\n      // Clear the new review form\r\n      setNewReview({\r\n        user: {\r\n          id: userData.id,\r\n        },\r\n        book: {\r\n          id: id,\r\n        },\r\n        rating: 0,\r\n        text: \"\",\r\n        date: formattedDate, // Set the date to the current date\r\n      });\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteBook = () => {\r\n  if (isAdmin) {\r\n\r\n    axios.delete('http://localhost:8080/book/deleteByTitle', {\r\n      data: { title : book.title }, // Pass the bookId as data for the DELETE request\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('Book deleted successfully:', response.data);\r\n        navigate('/book-list');\r\n        // You may want to navigate to a different page or update the UI as needed\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting book:', error);\r\n        // Handle the error, e.g., display an error message to the user\r\n      });\r\n  } else {\r\n    console.log('User does not have the required role for deletion.');\r\n    // Optionally, you can provide feedback to the user that they don't have the required role\r\n  }\r\n};\r\n\r\nconst handleBackToBook = () => {\r\n  navigate('/book-list');\r\n}  \r\n\r\n  const isAdmin = userData?.roles?.some(role => role.roleName === 'ADMIN') ?? false;\r\n  const isLoggedIn = userData ?? false;\r\n\r\n  if (!book || loadingReviews) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n   const handleCommentSubmit = async (reviewId, commentText) => {\r\n    try {\r\n      // Set the current date\r\n      const currentDate = new Date();\r\n      const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n      const formattedDate = currentDate.toLocaleDateString('en-GB', options);\r\n\r\n      // Create a new comment object\r\n      const newComment = {\r\n        text: commentText,\r\n        date: formattedDate,\r\n        reviewId: reviewId,\r\n        userId: userData.id,\r\n      };\r\n\r\n      // Send the new comment to the server using Axios\r\n      await axios.post('http://localhost:8080/comment/add', newComment, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      // Refetch comments for the review after submitting a new comment\r\n      const updatedCommentsResponse = await axios.get(`http://localhost:8080/comment/review/${reviewId}`);\r\n      const updatedCommentsData = updatedCommentsResponse.data;\r\n\r\n      // Update the comments state for the specific review\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [reviewId]: updatedCommentsData,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error submitting comment:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft :'300px',marginRight :'300px',backgroundColor:'' }}>\r\n      <h2>{book.title}</h2>\r\n      <p>Author: {book.authors.map(author => `${author.firstName} ${author.lastName}`).join(', ')}</p>\r\n      {book.publisher && (\r\n        <p>Publisher: {book.publisher.name}</p>\r\n      )}\r\n      <p>Genres: {book.genres.map(genre => genre.name).join(', ')}</p>\r\n      <h3>Reviews:</h3>\r\n      {Array.isArray(reviews) && reviews.length === 0 ? (\r\n        <p>No reviews available for this book.</p>\r\n      ) : (\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(1, 1fr)', gap: '16px', marginRight:300}}>\r\n          {reviews.map(review => (\r\n            <div key={review.id}style={{ border: '1px solid #ccc', padding: '16px', borderRadius: '8px', cursor: 'pointer' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between',position:'relative', top:'-10px' }}>\r\n                <div style={{ marginRight: '30px' }}>\r\n                  <p>User: {review.user.username}</p>\r\n                </div>\r\n              <div>\r\n                <p>Date: {review.date}</p>\r\n              </div>\r\n              </div>\r\n              <p>Rating: {review.rating}</p>\r\n              <p>{review.text}</p>\r\n              {//<p>Date: {review.date}</p>\r\n              }\r\n              {/* Display comments for the review */}\r\n            <div>\r\n              <h4>Comments:</h4>\r\n              {Array.isArray(comments[review.id]) && comments[review.id].length === 0 ? (\r\n                <p>No comments available for this review.</p>\r\n              ) : (\r\n                <ul>\r\n                  {comments[review.id].map(comment => (\r\n                    <li key={comment.id}>\r\n                      <strong>{comment.text}</strong> - {comment.date} by {comment.userId}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n\r\n            {/* Form for adding a new comment */}\r\n            <form onSubmit={(e) => handleCommentSubmit(review.id, e.target.commentText.value)}>\r\n              <label>Add a Comment:</label>\r\n              <textarea\r\n                name=\"commentText\"\r\n                rows=\"2\"\r\n                cols=\"40\"\r\n                required\r\n              />\r\n              <br />\r\n              <button type=\"submit\">Submit Comment</button>\r\n            </form>\r\n              \r\n            </div>\r\n              \r\n          ))}\r\n          \r\n        </div>\r\n      )}\r\n\r\n      \r\n      {isLoggedIn && (\r\n      <div style={{ marginLeft :'',marginRight :'',backgroundColor:'',position: 'absolute', top: 150, left: 1240 }}>\r\n      {/* Form for adding a new review */}\r\n      \r\n      <h3>Add a Review:</h3>\r\n      <form onSubmit={handleReviewSubmit}>\r\n        <label style={{ marginRight :'10px'}}>Rating:</label>\r\n        <input style={{ marginLeft :'10px'}}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"10\"\r\n          step=\"0.1\"\r\n          value={newReview.rating}\r\n          onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\r\n          required\r\n        />\r\n        <br />\r\n    \r\n        <br ></br>\r\n        <label >Review:</label>\r\n        <br></br>\r\n        <br></br>\r\n        <textarea rows= \"5\" cols = \"40\"\r\n          value={newReview.text}\r\n          onChange={(e) => setNewReview({ ...newReview, text: e.target.value })}\r\n          required\r\n        />\r\n        <br></br>\r\n        <br />\r\n        <button type=\"submit\" style = {{ position :'absolute', left : 250}}>Submit Review</button>\r\n      </form>\r\n      </div>\r\n      )}\r\n\r\n      {isAdmin && (\r\n        <button bookId={book.id} on onClick={handleDeleteBook} \r\n        style={{ position: 'absolute', top: 100, left: 1500 }}\r\n        >Delete Book</button>\r\n      )}\r\n      <br />\r\n      <button onClick={handleBackToBook}\r\n      style = {{position : 'absolute', left : 30, top:100}}>Back to Books</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualBookPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}