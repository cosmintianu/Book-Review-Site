{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ionut\\\\Desktop\\\\React\\\\bookreview\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Initialize user state with data from LocalStorage on component mount\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      //setUser({username:storedUsername})\n    }\n  }, []);\n  const login = userData => {\n    setUser(userData);\n    console.log(userData);\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('username');\n    //localStorage.removeItem('password');\n  };\n  const isAuthenticated = !!user;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUsername","localStorage","getItem","login","userData","console","log","logout","removeItem","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Ionut/Desktop/React/bookreview/src/components/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n \r\n  // Initialize user state with data from LocalStorage on component mount\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n        //setUser({username:storedUsername})\r\n        \r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n\r\n    setUser(userData);\r\n    console.log(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n\r\n    setUser(null);\r\n    localStorage.removeItem('username');\r\n    //localStorage.removeItem('password');\r\n  };\r\n  \r\n  const isAuthenticated = !!user;\r\n\r\n  \r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAChB;IAAA;EAGN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIC,QAAQ,IAAK;IAE1BL,OAAO,CAACK,QAAQ,CAAC;IACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IAEnBR,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;IACnC;EACF,CAAC;EAED,MAAMC,eAAe,GAAG,CAAC,CAACX,IAAI;EAG9B,oBACEL,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEK,KAAK;MAAEI,MAAM;MAAEE;IAAgB,CAAE;IAAAb,QAAA,EACnEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAjCWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAmCzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO7B,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAACwB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}